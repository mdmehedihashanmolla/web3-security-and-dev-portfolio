// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import {Test} from "forge-std/Test.sol";
import {WeakAccessControl} from "../../src/access_control/WeakAccessControl.sol";

contract WeakAccessControlTest is Test {
    WeakAccessControl public weakAccessControl;
    address public owner;
    address public attacker;

    function setUp() public {
        owner = address(0x1); 
        attacker = address(0x2); 

        vm.prank(owner);
        weakAccessControl = new WeakAccessControl();
    }

    function test_WithdrawVulnerability() public {
        vm.deal(owner, 1 ether);

        vm.prank(owner);
        weakAccessControl.deposit{value: 1 ether}();

        assertEq(weakAccessControl.balance(), 1 ether);

        vm.prank(attacker);
        weakAccessControl.withdraw(1 ether);

        assertEq(weakAccessControl.balance(), 0);

        assertEq(attacker.balance, 1 ether);
    }
}