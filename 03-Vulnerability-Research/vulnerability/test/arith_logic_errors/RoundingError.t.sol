// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import {Test} from "forge-std/Test.sol";
import {BillSplitter} from "../../src/arith_logic_errors/RoundingError.sol";

contract BillSplitterTest is Test {
    BillSplitter public billSplitter;

    function setUp() public {
        billSplitter = new BillSplitter();
    }

    function testRoundingErrorLossOfFunds() public view {
        uint256 totalBill = 100;
        uint256 numberOffFriends = 3;

        uint256 amountPerFriend = billSplitter.splitBill(totalBill, numberOffFriends);

        assertEq(amountPerFriend, 33, "Integer division truncates to 33");

        uint256 totalCollected = amountPerFriend * numberOffFriends;
        uint256 lostAmount = totalBill - totalCollected;

        assertEq(totalCollected, 99, "only 99 cents collected");
        assertEq(lostAmount, 1, "1 cents permanently lost due to rounding");
    }

    function testBuiltInVulnerabilityDemo() public view {
        (uint256 perFriend, uint256 totalPaid, uint256 lost) = billSplitter.showRoundingError();
        assertEq(perFriend, 33, "33 cents perfriend");
        assertEq(totalPaid, 99, "99 cents collected");
        assertEq(lost, 1, "1 cent lost forever");
    }
}
