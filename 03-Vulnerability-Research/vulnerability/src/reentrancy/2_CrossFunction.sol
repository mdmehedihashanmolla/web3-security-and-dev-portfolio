// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract CrossFunctionReentrancy {
    mapping(address => uint256) public balanceOf;
    uint256 public totalSupply;
    uint256 public rewardBalance;

    function deposit() public payable {
        balanceOf[msg.sender] += msg.value;
        totalSupply += msg.value;
    }

    function addReward() public payable {
        rewardBalance += msg.value;
    }

    function transfer(address to, uint256 value) public {
        require(balanceOf[msg.sender] >= value, "Insufficient balance");
        balanceOf[msg.sender] -= value;
        balanceOf[to] += value;
    }

    function claimReward() public {
        require(totalSupply > 0, "No supply");
        uint256 share = (balanceOf[msg.sender] * rewardBalance) / totalSupply;
        (bool success,) = msg.sender.call{value: share}("");
        require(success, "Failed to send Ether");
        rewardBalance -= share;
    }
}
