// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract VulnerableStorage {
    bytes[] public dataStore;

    // Function to store data, vulnerable to gas griefing
    function storeData(bytes calldata data) external {
        dataStore.push(data);
    }

    // Function to process stored data, vulnerable to gas-intensive looping
    function processData() external view returns (uint256) {
        uint256 totalLength = 0;
        for (uint256 i = 0; i < dataStore.length; i++) {
            totalLength += dataStore[i].length; // Gas-intensive if dataStore contains large entries
        }
        return totalLength;
    }
}
