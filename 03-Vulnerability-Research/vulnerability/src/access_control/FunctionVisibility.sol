// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract VulnerableVoting {
    address public owner;
    mapping(address => bool) public hasVoted;
    mapping(string => uint256) public votes;
    bool public votingEnded;

    constructor() {
        owner = msg.sender;
        votingEnded = false;
    }

    function vote(string memory candidate) external {
        require(!votingEnded, "Voting has ended");
        require(!hasVoted[msg.sender], "Already voted");
        hasVoted[msg.sender] = true;
        votes[candidate] += 1;
    }

    // Vulnerable function: Should be internal, but is public
    function finalizeVoting() public {
        votingEnded = true;
    }
}
